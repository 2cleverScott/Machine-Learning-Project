pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
View(pml.training)
summary(pml.training)
pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
summary(pml.training)
excercise <- tbl_df(pml.training)
library(dplyr)
pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
summary(pml.training)
excercise <- tbl_df(pml.training)
library(dplyr)
pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
summary(pml.training)
excercisedf <- tbl_df(pml.training)
## Build Model
View(excercisedf)
##Load Data
library(dplyr)
library(ggplot2)
library(caret)
library(tidyr)
pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
summary(pml.training)
excercisedf <- tbl_df(pml.training)
View(excercisedf)
## Build Model
set.seed(3429)
gbmFit <- train(classe ~ ., data=excercisedf,
method="gbm",
trControl=fitControl,
verbose=FALSE)
gbmFit
library(dplyr)
library(ggplot2)
library(caret)
pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
summary(pml.training)
excercisedf <- tbl_df(pml.training)
View(excercisedf)
## Build Model
set.seed(3429)
gbmFit <- train(classe ~ ., data=excercisedf,
method="gbm",
trControl=fitControl,
verbose=FALSE)
gbmFit
set.seed(3429)
gbmFit <- train(classe ~ ., data=excercisedf, method="gbm",trControl=fitControl,
verbose=FALSE)
set.seed(3429)
gbmFit <- train(classe ~ ., data=excercisedf, method="gbm",
verbose=FALSE)
library(ggplot2)
library(caret)
library(dplyr)
library(tidyr)
### Load Data
pml.training <- read.csv("~/Documents/JHU/Final MachineLearning Project/pml-training(1).csv")
summary(pml.training)
hist(pml.training$classe)
pml1 <- subset(pml.training, select=c(classe,roll_belt,pitch_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt,pitch_arm, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm))
excercisedf <- tbl_df(pml1)
gbmFit <- train(classe ~ ., data=excercisedf, method="gbm",
verbose=FALSE)
#What you should submit
#
# The goal of your project is to predict the manner in which they did the exercise.
# This is the "classe" variable in the training set. You may use any of the other variables to predict with.
# You should create a report describing how you built your model, how you used cross validation, what you think
# the expected out of sample error is, and why you made the choices you did. You will also use your prediction
# model to predict 20 different test cases.
#predict which of the 5 the subject did based on the XYZ coord of arm wrist and belt together
library(ggplot2)
library(caret)
library(dplyr)
### Load Data
pml.training <- read.csv("~/Documents/JHU/Final MachineLearning Project/pml-training(1).csv")
summary(pml.training)
hist(pml.training$classe)
pml1 <- subset(pml.training, select=c(classe,roll_belt,pitch_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt,pitch_arm, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm))
excercisedf <- tbl_df(pml1)
gbmFit <- train(classe ~ ., data=excercisedf, method="gbm",
verbose=FALSE)
gbmFit
#explore to fi
pmjeremy <- subset(pml.training, pml.training$user_name=='jeremy')
hist(pmjeremy$total_accel_dumbbell)
##Roll dumbell roll arm roll belt
plot(pmjeremy$classe, pmjeremy$pitch_belt)
plot(pmjeremy$classe, pmjeremy$pitch_arm)
plot(pmjeremy$classe, pmjeremy$pitch_forearm)
plot(pmjeremy$classe, pmjeremy$yaw_dumbbell)
plot(pmjeremy$classe, pmjeremy$yaw_dumbbell)
plot(pmjeremy$classe, pmjeremy$yaw_dumbbell)
plot(pmjeremy$classe, pmjeremy$total_accel_dumbbell)
plot(pmjeremy$classe, pmjeremy$pitch_dumbbell)
plot(pmjeremy$pitch_dumbbell, pmjeremy$yaw_dumbbell)
cor(pmjeremy$total_accel_arm, pmjeremy$yaw_dumbbell)
qplot()
lm(pmjeremy$classe~pmjeremy$roll_dumbbell, data=pmjeremy)
##Given the data  A Boosted Decision Tree Regression
set.seed(93402)
# Cross validation
cartfit <- train(classe ~ ., data=excercisedf, method="rpart", trainControl=
verbose=FALSE)
cartfit <- train(classe ~ ., data=excercisedf, method="rpart",                        verbose=FALSE)
adaboy <- train(classe ~ ., data=excercisedf, method="ada",                        verbose=FALSE)
cartfit <- train(classe ~ ., data=pml1, method="rpart",                        verbose=FALSE)
View(pml.training)
pml1 <- subset(pml.training, select=c(classe,roll_belt,pitch_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt,pitch_arm, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm,roll_dumbbell,pitch_dumbbell,yaw_dumbbell ))
excercisedf <- tbl_df(pml1)
cartfit <- train(classe ~ ., data=pml1, method="rpart", verbose=FALSE)
rfmodel <- train(classe ~ ., data=pml1, method="rf", verbose=FALSE)
library(ggplot2)
library(caret)
library(parallel)
library(dplyr)
library(gbm)
library(doMC)
registerDoMC(cores=1)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 3,
## repeated ten times
repeats = 3)
excrffit <- train(classe~., data=excercisedf,method="rf", trainControl=fitControl )
excrffitt
excrffit
plot(excrffit)
pml.testing <- read.csv("pml-testing.csv")
predict(excrffit,pml.testing)
pmltest<- subset(pml.testing, select=c(classe,roll_belt,pitch_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt,pitch_arm, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y,	gyros_forearm_z,	accel_forearm_x,	accel_forearm_y,
accel_forearm_z,	magnet_forearm_x,	magnet_forearm_y,	magnet_forearm_z,total_accel_forearm,
roll_forearm,	pitch_forearm,	yaw_forearm,gyros_dumbbell_x,	gyros_dumbbell_y,
gyros_dumbbell_z,	accel_dumbbell_x,	accel_dumbbell_y,	accel_dumbbell_z,
magnet_dumbbell_x,	magnet_dumbbell_y,	magnet_dumbbell_z,
gyros_arm_x,	gyros_arm_y,	gyros_arm_z,	accel_arm_x,accel_arm_y,
accel_arm_z,	magnet_arm_x,	magnet_arm_y,	magnet_arm_z,roll_dumbbell,
pitch_dumbbell,	yaw_dumbbell
))
pmltest<- subset(pml.testing, select=c(roll_belt,pitch_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt,pitch_arm, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y,	gyros_forearm_z,	accel_forearm_x,	accel_forearm_y,
accel_forearm_z,	magnet_forearm_x,	magnet_forearm_y,	magnet_forearm_z,total_accel_forearm,
roll_forearm,	pitch_forearm,	yaw_forearm,gyros_dumbbell_x,	gyros_dumbbell_y,
gyros_dumbbell_z,	accel_dumbbell_x,	accel_dumbbell_y,	accel_dumbbell_z,
magnet_dumbbell_x,	magnet_dumbbell_y,	magnet_dumbbell_z,
gyros_arm_x,	gyros_arm_y,	gyros_arm_z,	accel_arm_x,accel_arm_y,
accel_arm_z,	magnet_arm_x,	magnet_arm_y,	magnet_arm_z,roll_dumbbell,
pitch_dumbbell,	yaw_dumbbell
))
predict(excrffit,pmltest)
View (pml1)
pml.training <- read.csv("pml-training.csv")
pml1 <- subset(pml.training, select=c(classe,roll_belt,pitch_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_arm, pitch_forearm,
roll_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y,	gyros_forearm_z,	accel_forearm_x,	accel_forearm_y,
accel_forearm_z,	magnet_forearm_x,	magnet_forearm_y,	magnet_forearm_z,total_accel_forearm,
roll_forearm,	pitch_forearm,	yaw_forearm,gyros_dumbbell_x,	gyros_dumbbell_y,
gyros_dumbbell_z,	accel_dumbbell_x,	accel_dumbbell_y,	accel_dumbbell_z,
magnet_dumbbell_x,	magnet_dumbbell_y,	magnet_dumbbell_z,
gyros_arm_x,	gyros_arm_y,	gyros_arm_z,	accel_arm_x,accel_arm_y,
accel_arm_z,	magnet_arm_x,	magnet_arm_y,	magnet_arm_z,roll_dumbbell,
pitch_dumbbell,	yaw_dumbbell
))
excercisedf <- tbl_df(pml1)
excrffit <- train(classe~., data=excercisedf,method="rf", trainControl=fitControl,verbose=FALSE )
registerDoMC(cores=2)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 3,
## repeated ten times
repeats = 3)
excrffit <- train(classe~., data=excercisedf,method="rf", trainControl=fitControl,verbose=FALSE )
excrffit
predict(excrffit,pmltest)
plot(excrffit)
### Load Data
furl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(furl, destfile= "pml-training.csv", method="curl")
pml.training <- read.csv("pml-training.csv")
https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv
furl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(furl, destfile= "pml-testing.csv", method="curl")
pml.testing <- read.csv("pml-testing.csv")
pml1 <- subset(pml.training, select=c(classe,roll_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y, gyros_forearm_z, accel_forearm_x, accel_forearm_y,
accel_forearm_z, magnet_forearm_x, magnet_forearm_y, magnet_forearm_z,total_accel_forearm,
roll_forearm, pitch_forearm, yaw_forearm,gyros_dumbbell_x, gyros_dumbbell_y,
gyros_dumbbell_z, accel_dumbbell_x, accel_dumbbell_y, accel_dumbbell_z,
magnet_dumbbell_x, magnet_dumbbell_y, magnet_dumbbell_z,
gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x,accel_arm_y,
accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z,roll_dumbbell,
pitch_dumbbell, yaw_dumbbell
))
excercisedf <- tbl_df(pml1)
##testing Data
pml.testing <- read.csv("~/Documents/JHU/Final MachineLearning Project/pml-testing.csv")
pmltest <- subset(pml.testing, select=c(roll_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y, gyros_forearm_z, accel_forearm_x, accel_forearm_y,
accel_forearm_z, magnet_forearm_x, magnet_forearm_y, magnet_forearm_z,total_accel_forearm,
roll_forearm, pitch_forearm, yaw_forearm,gyros_dumbbell_x, gyros_dumbbell_y,
gyros_dumbbell_z, accel_dumbbell_x, accel_dumbbell_y, accel_dumbbell_z,
magnet_dumbbell_x, magnet_dumbbell_y, magnet_dumbbell_z,
gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x,accel_arm_y,
accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z,roll_dumbbell,
pitch_dumbbell, yaw_dumbbell
))
### Load Data
furl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(furl, destfile= "pml-training.csv", method="curl")
pml.training <- read.csv("pml-training.csv")
fturl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(fturl, destfile= "pml-testing.csv", method="curl")
pml.testing <- read.csv("pml-testing.csv")
pml1 <- subset(pml.training, select=c(classe,roll_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y, gyros_forearm_z, accel_forearm_x, accel_forearm_y,
accel_forearm_z, magnet_forearm_x, magnet_forearm_y, magnet_forearm_z,total_accel_forearm,
roll_forearm, pitch_forearm, yaw_forearm,gyros_dumbbell_x, gyros_dumbbell_y,
gyros_dumbbell_z, accel_dumbbell_x, accel_dumbbell_y, accel_dumbbell_z,
magnet_dumbbell_x, magnet_dumbbell_y, magnet_dumbbell_z,
gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x,accel_arm_y,
accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z,roll_dumbbell,
pitch_dumbbell, yaw_dumbbell
))
excercisedf <- tbl_df(pml1)
##testing Data
pml.testing <- read.csv("~/Documents/JHU/Final MachineLearning Project/pml-testing.csv")
pmltest <- subset(pml.testing,select=c(roll_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y, gyros_forearm_z, accel_forearm_x, accel_forearm_y,
accel_forearm_z, magnet_forearm_x, magnet_forearm_y, magnet_forearm_z,total_accel_forearm,
roll_forearm, pitch_forearm, yaw_forearm,gyros_dumbbell_x, gyros_dumbbell_y,
gyros_dumbbell_z, accel_dumbbell_x, accel_dumbbell_y, accel_dumbbell_z,
magnet_dumbbell_x, magnet_dumbbell_y, magnet_dumbbell_z,
gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x,accel_arm_y,
accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z,roll_dumbbell,
pitch_dumbbell, yaw_dumbbell
))
##Roll dumbell roll arm roll belt
plot(excercisedf$classe, excercisedf$pitch_belt)
qplot(excercisedf$classe, excercisedf$roll_belt)
plot(excercisedf$classe, excercisedf$roll_forearm)
qplot(excercisedf$classe, excercisedf$roll_arm)
qplot(excercisedf$classe,accel_belt_z, data=excercisedf)
library(ggplot2)
library(caret)
library(parallel)
library(dplyr)
library(doMC)
registerDoMC(cores = 2)
cvcontrol <- trainControl(## 3-fold Cross-Validation
method = "repeatedcv",
number = 3,
repeats = 3)
### Load Data
furl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(furl, destfile= "pml-training.csv", method="curl")
pml.training <- read.csv("pml-training.csv")
fturl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(fturl, destfile= "pml-testing.csv", method="curl")
pml.testing <- read.csv("pml-testing.csv")
pml1 <- subset(pml.training, select=c(classe,roll_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y, gyros_forearm_z, accel_forearm_x, accel_forearm_y,
accel_forearm_z, magnet_forearm_x, magnet_forearm_y, magnet_forearm_z,total_accel_forearm,
roll_forearm, pitch_forearm, yaw_forearm,gyros_dumbbell_x, gyros_dumbbell_y,
gyros_dumbbell_z, accel_dumbbell_x, accel_dumbbell_y, accel_dumbbell_z,
magnet_dumbbell_x, magnet_dumbbell_y, magnet_dumbbell_z,
gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x,accel_arm_y,
accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z,roll_dumbbell,
pitch_dumbbell, yaw_dumbbell
))
excercisedf <- tbl_df(pml1)
##testing Data
pml.testing <- read.csv("~/Documents/JHU/Final MachineLearning Project/pml-testing.csv")
pmltest <- subset(pml.testing,select=c(roll_belt,yaw_belt,gyros_belt_x,
gyros_belt_y,gyros_belt_z, accel_belt_x,accel_belt_y,accel_belt_z,magnet_belt_x,
magnet_belt_y,magnet_belt_z,pitch_belt, pitch_forearm,
roll_arm,pitch_arm,yaw_arm, roll_forearm, gyros_forearm_x,
gyros_forearm_y, gyros_forearm_z, accel_forearm_x, accel_forearm_y,
accel_forearm_z, magnet_forearm_x, magnet_forearm_y, magnet_forearm_z,total_accel_forearm,
roll_forearm, pitch_forearm, yaw_forearm,gyros_dumbbell_x, gyros_dumbbell_y,
gyros_dumbbell_z, accel_dumbbell_x, accel_dumbbell_y, accel_dumbbell_z,
magnet_dumbbell_x, magnet_dumbbell_y, magnet_dumbbell_z,
gyros_arm_x, gyros_arm_y, gyros_arm_z, accel_arm_x,accel_arm_y,
accel_arm_z, magnet_arm_x, magnet_arm_y, magnet_arm_z,roll_dumbbell,
pitch_dumbbell, yaw_dumbbell
))
##Roll dumbell roll arm roll belt
plot(excercisedf$classe, excercisedf$pitch_belt)
qplot(excercisedf$classe, excercisedf$roll_belt)
plot(excercisedf$classe, excercisedf$roll_forearm)
qplot(excercisedf$classe, excercisedf$roll_arm)
qplot(excercisedf$classe,accel_belt_z, data=excercisedf)
set.seed(93402)
### Form models and choose the best, with the CART model, Gradient Boosted Machine and Random Forests
cartfit  <- train(classe~., data=excercisedf,method="rpart")
Cartfit
predict(cartfit,pmltest)
plot(cartfit)
excgbmfit <- train(classe~., data=excercisedf,method="gbm", trControl=cvcontrol, verbose=FALSE )
excgbmfit
predict(excgbmfit,pmltest)
plot(excgbmfit)
excrffit <- train(classe~., data=excercisedf,method="rf", trainControl=cvcontrol,verbose=FALSE )
excrffit
Plot(excrffit)
predict(excrffit,pmltest)
pml.training <- read.csv("~/JHU/Machine Learning Project/pml-training.csv")
View(pml.training)
View(pml.training)
dim(pml.training)
